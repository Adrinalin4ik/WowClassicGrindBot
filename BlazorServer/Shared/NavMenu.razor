@inject Core.IBotController botController
@inject Microsoft.Extensions.Logging.ILogger logger

@using SharedLib;
@using Game;

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">MasterOfPuppets</a>

    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

@if (AddonConfig.Exists() && DataFrameConfiguration.Exists())
{

    <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
        <ul class="nav flex-column">
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Dashboard
                </NavLink>
            </li>
            <li class="nav-item px-3 @(HideClassConfig ? "hide" : "")">
                <NavLink class="nav-link" href="ClassConfigPage">
                    <span class="oi oi-cog" aria-hidden="true"></span> Class Configuration
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="Screenshot">
                    <span class="oi oi-image" aria-hidden="true"></span> Screenshot
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="Swag">
                    <span class="oi oi-box" aria-hidden="true"></span> Swag
                </NavLink>
            </li>
            <li class="nav-item px-3 @(HideClassConfig ? "hide" : "")">
                <NavLink class="nav-link" href="RecordPath">
                    <span class="oi oi-media-record" aria-hidden="true"></span> Record Path
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="Gather">
                    <span class="oi oi-basket" aria-hidden="true"></span>
                    @if (this.botController.ClassConfig?.Mode == Core.Mode.AttendedGather)
                    {
                        <span>Gather</span>
                    }
                    else
                    {
                        <s>Gather</s>
                    }

                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="AddonConfiguration">
                    <span class="oi oi-cog" aria-hidden="true"></span> Addon Configuration
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="FrameConfiguration">
                    <span class="oi oi-cog" aria-hidden="true"></span> Frame Configuration
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="Log">
                    <span class="oi oi-text" aria-hidden="true"></span> Log
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="RestartServer">
                    <span class="oi oi-media-stop" aria-hidden="true"></span> Restart Server
                </NavLink>
            </li>
        </ul>
    </div>
}
else
{
    <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
        <ul class="nav flex-column">

            <li class="nav-item px-3">
                <NavLink class="nav-link" Disabled="disabled">
                    <span class="oi oi-cog" aria-hidden="true"></span>1. Restart Game
                </NavLink>
            </li>

            @if (WoWProcessRunning)
            {
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="AddonConfiguration" Disabled="disabled">
                        <span class="oi oi-cog" aria-hidden="true"></span>2. Addon Configuration
                    </NavLink>
                </li>

                @if (AddonConfigExists)
                {
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" Disabled="disabled">
                            <span class="oi oi-cog" aria-hidden="true"></span>3. Restart Game
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" Disabled="disabled">
                            <span class="oi oi-cog" aria-hidden="true"></span>4. Enter world
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="FrameConfiguration">
                            <span class="oi oi-cog" aria-hidden="true"></span>5. Frame Configuration
                        </NavLink>
                    </li>
                }
            }

        </ul>
    </div>
}



@code {

    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : string.Empty;

    private bool HideClassConfig => botController.IsBotActive || botController.ClassConfig == null;

    private bool WoWProcessRunning => WowProcess.Get() != null;

    private bool AddonConfigExists => AddonConfig.Exists() && addonConfigurator != null && addonConfigurator.Installed();

    private AddonConfigurator? addonConfigurator;


    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        addonConfigurator = new AddonConfigurator(logger, AddonConfig.Load());

        if (DataFrameConfiguration.Exists())
        {
            botController.ProfileLoaded += (o, e) =>
            {
                base.InvokeAsync(() =>
                {
                    try
                    {
                        StateHasChanged();
                    }
                    catch { }
                });
            };

            botController.StatusChanged += (o, e) =>
            {
                base.InvokeAsync(() =>
                {
                    try
                    {
                        StateHasChanged();
                    }
                    catch { }
                });
            };
        }
    }
}